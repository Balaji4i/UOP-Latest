package model.vo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 20 17:43:22 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class WellChild_VORowImpl extends ViewRowImpl {
    public static final int ENTITY_WELLCHILD_EO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        ChildWellCode,
        CreatedBy,
        CreationDate,
        EffectiveEndDate,
        EffectiveStartDate,
        LastUpdateDate,
        LastUpdateLogin,
        LastUpdatedBy,
        WellId,
        ChildWellId,
        Trans_ChildWellCode,
        Well_ROVO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CHILDWELLCODE = AttributesEnum.ChildWellCode.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EffectiveEndDate.index();
    public static final int EFFECTIVESTARTDATE = AttributesEnum.EffectiveStartDate.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int WELLID = AttributesEnum.WellId.index();
    public static final int CHILDWELLID = AttributesEnum.ChildWellId.index();
    public static final int TRANS_CHILDWELLCODE = AttributesEnum.Trans_ChildWellCode.index();
    public static final int WELL_ROVO = AttributesEnum.Well_ROVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public WellChild_VORowImpl() {
    }

    /**
     * Gets WellChild_EO entity object.
     * @return the WellChild_EO
     */
    public EntityImpl getWellChild_EO() {
        return (EntityImpl) getEntity(ENTITY_WELLCHILD_EO);
    }

    /**
     * Gets the attribute value for CHILD_WELL_CODE using the alias name ChildWellCode.
     * @return the CHILD_WELL_CODE
     */
    public String getChildWellCode() {
        return (String) getAttributeInternal(CHILDWELLCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CHILD_WELL_CODE using the alias name ChildWellCode.
     * @param value value to set the CHILD_WELL_CODE
     */
    public void setChildWellCode(String value) {
        setAttributeInternal(CHILDWELLCODE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for EFFECTIVE_END_DATE using the alias name EffectiveEndDate.
     * @return the EFFECTIVE_END_DATE
     */
    public Timestamp getEffectiveEndDate() {
        return (Timestamp) getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EFFECTIVE_END_DATE using the alias name EffectiveEndDate.
     * @param value value to set the EFFECTIVE_END_DATE
     */
    public void setEffectiveEndDate(Timestamp value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**
     * Gets the attribute value for EFFECTIVE_START_DATE using the alias name EffectiveStartDate.
     * @return the EFFECTIVE_START_DATE
     */
    public Timestamp getEffectiveStartDate() {
        return (Timestamp) getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EFFECTIVE_START_DATE using the alias name EffectiveStartDate.
     * @param value value to set the EFFECTIVE_START_DATE
     */
    public void setEffectiveStartDate(Timestamp value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for WELL_ID using the alias name WellId.
     * @return the WELL_ID
     */
    public BigDecimal getWellId() {
        return (BigDecimal) getAttributeInternal(WELLID);
    }

    /**
     * Sets <code>value</code> as attribute value for WELL_ID using the alias name WellId.
     * @param value value to set the WELL_ID
     */
    public void setWellId(BigDecimal value) {
        setAttributeInternal(WELLID, value);
    }

    /**
     * Gets the attribute value for CHILD_WELL_ID using the alias name ChildWellId.
     * @return the CHILD_WELL_ID
     */
    public BigDecimal getChildWellId() {
        return (BigDecimal) getAttributeInternal(CHILDWELLID);
    }

    /**
     * Sets <code>value</code> as attribute value for CHILD_WELL_ID using the alias name ChildWellId.
     * @param value value to set the CHILD_WELL_ID
     */
    public void setChildWellId(BigDecimal value) {
        setAttributeInternal(CHILDWELLID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_ChildWellCode.
     * @return the Trans_ChildWellCode
     */
    public String getTrans_ChildWellCode() {
        String wellCode = null;
                String wellName = null;
                String wellCodeName = null;
                if (getChildWellCode() != null) {
                    wellCode = getChildWellCode();
                    Row[] orgRows;
                    orgRows = getWell_ROVO().getFilteredRows("WellCode", wellCode);
                    if (orgRows.length > 0) {
                        wellCode = orgRows[0].getAttribute("WellCode").toString();
                        wellName = orgRows[0].getAttribute("WellName").toString();
                        wellCodeName=wellCode+" - "+wellName;

                    }
                    return wellCodeName;
                } else {
                
        return (String) getAttributeInternal(TRANS_CHILDWELLCODE);}
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_ChildWellCode.
     * @param value value to set the  Trans_ChildWellCode
     */
    public void setTrans_ChildWellCode(String value) {
        setAttributeInternal(TRANS_CHILDWELLCODE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Well_ROVO.
     */
    public RowSet getWell_ROVO() {
        return (RowSet) getAttributeInternal(WELL_ROVO);
    }
}

