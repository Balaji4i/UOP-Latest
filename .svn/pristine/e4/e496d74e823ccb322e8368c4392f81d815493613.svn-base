package model.vo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 14 15:43:15 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class WellMasterVORowImpl extends ViewRowImpl {


    public static final int ENTITY_WELLMASTEREO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        WellId,
        WellCode,
        WellName,
        Remarks,
        BusinessUnitId,
        LegalEntityId,
        LedgerId,
        CurrencyCode,
        IsActive,
        CreatedBy,
        CreationDate,
        LastUpdatedBy,
        LastUpdateDate,
        LastUpdateLogin,
        Trans_BusUnit,
        Trans_Entity,
        CompanyCode,
        Trans_CompCode,
        AssetBookCode,
        Trans_AssetBookName,
        Trans_Search_Cmpy,
        Trans_LedgerName,
        WellBlockCode,
        Trans_WellBlockName,
        WellDtlsVO,
        WellChild_VO,
        Xxhr_BusinessUnit_view_ROVO,
        Xxgl_Ledgers,
        Xxhr_BusinessUnit_view_Ref,
        Code_Combination_ROVO,
        Code_Combination_Ref,
        EntityProfiles_ROVO,
        EntityProfiles_Ref,
        Well_ROVO,
        Company_ROVO,
        Company_AssetBook_ROVO,
        LegalEntity_ROVO,
        Lookup_View_ROVO;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int WELLID = AttributesEnum.WellId.index();
    public static final int WELLCODE = AttributesEnum.WellCode.index();
    public static final int WELLNAME = AttributesEnum.WellName.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int BUSINESSUNITID = AttributesEnum.BusinessUnitId.index();
    public static final int LEGALENTITYID = AttributesEnum.LegalEntityId.index();
    public static final int LEDGERID = AttributesEnum.LedgerId.index();
    public static final int CURRENCYCODE = AttributesEnum.CurrencyCode.index();
    public static final int ISACTIVE = AttributesEnum.IsActive.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int TRANS_BUSUNIT = AttributesEnum.Trans_BusUnit.index();
    public static final int TRANS_ENTITY = AttributesEnum.Trans_Entity.index();
    public static final int COMPANYCODE = AttributesEnum.CompanyCode.index();
    public static final int TRANS_COMPCODE = AttributesEnum.Trans_CompCode.index();
    public static final int ASSETBOOKCODE = AttributesEnum.AssetBookCode.index();
    public static final int TRANS_ASSETBOOKNAME = AttributesEnum.Trans_AssetBookName.index();
    public static final int TRANS_SEARCH_CMPY = AttributesEnum.Trans_Search_Cmpy.index();
    public static final int TRANS_LEDGERNAME = AttributesEnum.Trans_LedgerName.index();
    public static final int WELLBLOCKCODE = AttributesEnum.WellBlockCode.index();
    public static final int TRANS_WELLBLOCKNAME = AttributesEnum.Trans_WellBlockName.index();
    public static final int WELLDTLSVO = AttributesEnum.WellDtlsVO.index();
    public static final int WELLCHILD_VO = AttributesEnum.WellChild_VO.index();
    public static final int XXHR_BUSINESSUNIT_VIEW_ROVO = AttributesEnum.Xxhr_BusinessUnit_view_ROVO.index();
    public static final int XXGL_LEDGERS = AttributesEnum.Xxgl_Ledgers.index();
    public static final int XXHR_BUSINESSUNIT_VIEW_REF = AttributesEnum.Xxhr_BusinessUnit_view_Ref.index();
    public static final int CODE_COMBINATION_ROVO = AttributesEnum.Code_Combination_ROVO.index();
    public static final int CODE_COMBINATION_REF = AttributesEnum.Code_Combination_Ref.index();
    public static final int ENTITYPROFILES_ROVO = AttributesEnum.EntityProfiles_ROVO.index();
    public static final int ENTITYPROFILES_REF = AttributesEnum.EntityProfiles_Ref.index();
    public static final int WELL_ROVO = AttributesEnum.Well_ROVO.index();
    public static final int COMPANY_ROVO = AttributesEnum.Company_ROVO.index();
    public static final int COMPANY_ASSETBOOK_ROVO = AttributesEnum.Company_AssetBook_ROVO.index();
    public static final int LEGALENTITY_ROVO = AttributesEnum.LegalEntity_ROVO.index();
    public static final int LOOKUP_VIEW_ROVO = AttributesEnum.Lookup_View_ROVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public WellMasterVORowImpl() {
    }

    /**
     * Gets WellMasterEO entity object.
     * @return the WellMasterEO
     */
    public EntityImpl getWellMasterEO() {
        return (EntityImpl) getEntity(ENTITY_WELLMASTEREO);
    }

    /**
     * Gets the attribute value for WELL_ID using the alias name WellId.
     * @return the WELL_ID
     */
    public BigDecimal getWellId() {
        return (BigDecimal) getAttributeInternal(WELLID);
    }

    /**
     * Sets <code>value</code> as attribute value for WELL_ID using the alias name WellId.
     * @param value value to set the WELL_ID
     */
    public void setWellId(BigDecimal value) {
        setAttributeInternal(WELLID, value);
    }

    /**
     * Gets the attribute value for WELL_CODE using the alias name WellCode.
     * @return the WELL_CODE
     */
    public String getWellCode() {
        return (String) getAttributeInternal(WELLCODE);
    }


    /**
     * Sets <code>value</code> as attribute value for WELL_CODE using the alias name WellCode.
     * @param value value to set the WELL_CODE
     */
    public void setWellCode(String value) {
        setAttributeInternal(WELLCODE, value);
    }

    /**
     * Gets the attribute value for WELL_NAME using the alias name WellName.
     * @return the WELL_NAME
     */
    public String getWellName() {

        return (String) getAttributeInternal(WELLNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for WELL_NAME using the alias name WellName.
     * @param value value to set the WELL_NAME
     */
    public void setWellName(String value) {
        setAttributeInternal(WELLNAME, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for BUSINESS_UNIT_ID using the alias name BusinessUnitId.
     * @return the BUSINESS_UNIT_ID
     */
    public BigDecimal getBusinessUnitId() {


        return (BigDecimal) getAttributeInternal(BUSINESSUNITID);
    }

    /**
     * Sets <code>value</code> as attribute value for BUSINESS_UNIT_ID using the alias name BusinessUnitId.
     * @param value value to set the BUSINESS_UNIT_ID
     */
    public void setBusinessUnitId(BigDecimal value) {
        setAttributeInternal(BUSINESSUNITID, value);
    }

    /**
     * Gets the attribute value for LEGAL_ENTITY_ID using the alias name LegalEntityId.
     * @return the LEGAL_ENTITY_ID
     */
    public BigDecimal getLegalEntityId() {
        return (BigDecimal) getAttributeInternal(LEGALENTITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for LEGAL_ENTITY_ID using the alias name LegalEntityId.
     * @param value value to set the LEGAL_ENTITY_ID
     */
    public void setLegalEntityId(BigDecimal value) {
        setAttributeInternal(LEGALENTITYID, value);
    }

    /**
     * Gets the attribute value for LEDGER_ID using the alias name LedgerId.
     * @return the LEDGER_ID
     */
    public BigDecimal getLedgerId() {
        return (BigDecimal) getAttributeInternal(LEDGERID);
    }

    /**
     * Sets <code>value</code> as attribute value for LEDGER_ID using the alias name LedgerId.
     * @param value value to set the LEDGER_ID
     */
    public void setLedgerId(BigDecimal value) {
        setAttributeInternal(LEDGERID, value);
    }

    /**
     * Gets the attribute value for CURRENCY_CODE using the alias name CurrencyCode.
     * @return the CURRENCY_CODE
     */
    public String getCurrencyCode() {
        return (String) getAttributeInternal(CURRENCYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CURRENCY_CODE using the alias name CurrencyCode.
     * @param value value to set the CURRENCY_CODE
     */
    public void setCurrencyCode(String value) {
        setAttributeInternal(CURRENCYCODE, value);
    }


    /**
     * Gets the attribute value for IS_ACTIVE using the alias name IsActive.
     * @return the IS_ACTIVE
     */
    public String getIsActive() {
        return (String) getAttributeInternal(ISACTIVE);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_ACTIVE using the alias name IsActive.
     * @param value value to set the IS_ACTIVE
     */
    public void setIsActive(String value) {
        setAttributeInternal(ISACTIVE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_BusUnit.
     * @return the Trans_BusUnit
     */
    public String getTrans_BusUnit() {

        BigDecimal OrgId = null;
        String orgName = null;
        if (getBusinessUnitId() != null) {
            OrgId = getBusinessUnitId();
            Row[] orgRows;
            orgRows = getXxhr_BusinessUnit_view_Ref().getFilteredRows("BuId", OrgId);
            if (orgRows.length > 0) {
                orgName = orgRows[0].getAttribute("BuName").toString();

            }
            return orgName;

        } else {
            return (String) getAttributeInternal(TRANS_BUSUNIT);
        }
    }


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_BusUnit.
     * @param value value to set the  Trans_BusUnit
     */
    public void setTrans_BusUnit(String value) {
        setAttributeInternal(TRANS_BUSUNIT, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Trans_Entity.
     * @return the Trans_Entity
     */
    public String getTrans_Entity() {
        BigDecimal legalEntityId = null;
        String legalEntityName = null;
        if (getLegalEntityId() != null) {
            legalEntityId = getLegalEntityId();
            Row[] LegalEntityRows;
            LegalEntityRows = getLegalEntity_ROVO().getFilteredRows("LegalEntityId", legalEntityId);
            if (LegalEntityRows.length > 0) {
                legalEntityName = LegalEntityRows[0].getAttribute("LegalEntityName").toString();
                // legalEntityName =  legalEntityId+" - "+legalEntityName;

            }
            return legalEntityName;
        } else {
            return (String) getAttributeInternal(TRANS_ENTITY);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_Entity.
     * @param value value to set the  Trans_Entity
     */
    public void setTrans_Entity(String value) {
        setAttributeInternal(TRANS_ENTITY, value);
    }

    /**
     * Gets the attribute value for COMPANY_CODE using the alias name CompanyCode.
     * @return the COMPANY_CODE
     */
    public String getCompanyCode() {
        return (String) getAttributeInternal(COMPANYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPANY_CODE using the alias name CompanyCode.
     * @param value value to set the COMPANY_CODE
     */
    public void setCompanyCode(String value) {
        setAttributeInternal(COMPANYCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_CompCode.
     * @return the Trans_CompCode
     */
    public String getTrans_CompCode() {
        String compCode = null;
        String compName = null;
        String compCodeName = null;
        if (getCompanyCode() != null) {
            compCode = getCompanyCode();
            Row[] orgRows;
            orgRows = getCompany_AssetBook_ROVO().getFilteredRows("CompanyCode", compCode);
            if (orgRows.length > 0) {
                compCode = orgRows[0].getAttribute("CompanyCode").toString();
                compName = orgRows[0].getAttribute("CompanyName").toString();
                compCodeName = compCode + " - " + compName;

            }
            return compCodeName;
        } else {
            return (String) getAttributeInternal(TRANS_COMPCODE);
        }
    }


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_CompCode.
     * @param value value to set the  Trans_CompCode
     */
    public void setTrans_CompCode(String value) {
        setAttributeInternal(TRANS_COMPCODE, value);
    }

    /**
     * Gets the attribute value for ASSET_BOOK_CODE using the alias name AssetBookCode.
     * @return the ASSET_BOOK_CODE
     */
    public String getAssetBookCode() {
        return (String) getAttributeInternal(ASSETBOOKCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSET_BOOK_CODE using the alias name AssetBookCode.
     * @param value value to set the ASSET_BOOK_CODE
     */
    public void setAssetBookCode(String value) {
        setAttributeInternal(ASSETBOOKCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_AssetBookName.
     * @return the Trans_AssetBookName
     */
    public String getTrans_AssetBookName() {
        String assertCode = null;
        String assertName = null;
        if (getAssetBookCode() != null) {
            assertCode = getAssetBookCode();
            Row[] orgRows;
            orgRows = getCompany_AssetBook_ROVO().getFilteredRows("BookTypeCode", assertCode);
            if (orgRows.length > 0) {
                assertName = orgRows[0].getAttribute("BookTypeName").toString();

            }
            return assertName;
        } else {

            return (String) getAttributeInternal(TRANS_ASSETBOOKNAME);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_AssetBookName.
     * @param value value to set the  Trans_AssetBookName
     */
    public void setTrans_AssetBookName(String value) {
        setAttributeInternal(TRANS_ASSETBOOKNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_Search_Cmpy.
     * @return the Trans_Search_Cmpy
     */
    public String getTrans_Search_Cmpy() {
        String compCode = null;
        String compName = null;
        //  String compCodeName=null;
        if (getCompanyCode() != null) {
            compCode = getCompanyCode();
            Row[] orgRows;
            orgRows = getCompany_AssetBook_ROVO().getFilteredRows("CompanyCode", compCode);
            if (orgRows.length > 0) {
                // compCode = orgRows[0].getAttribute("CompanyCode").toString();
                compName = orgRows[0].getAttribute("CompanyName").toString();
                //  compCodeName=compCode+" - "+compName;


            }
            return compName;
        } else {
            return (String) getAttributeInternal(TRANS_SEARCH_CMPY);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_Search_Cmpy.
     * @param value value to set the  Trans_Search_Cmpy
     */
    public void setTrans_Search_Cmpy(String value) {
        setAttributeInternal(TRANS_SEARCH_CMPY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_LedgerName.
     * @return the Trans_LedgerName
     */
    public String getTrans_LedgerName() {
        BigDecimal ledgerId = new BigDecimal(0);
        String ledgerName = null;
        if (getLedgerId() != null) {
            ledgerId = getLedgerId();
            Row[] orgRows;
            orgRows = getCompany_AssetBook_ROVO().getFilteredRows("LedgerId", ledgerId);
            if (orgRows.length > 0) {
                ledgerName = orgRows[0].getAttribute("LedgerName").toString();

            }
            return ledgerName;
        } else {
            return (String) getAttributeInternal(TRANS_LEDGERNAME);
        }

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_LedgerName.
     * @param value value to set the  Trans_LedgerName
     */
    public void setTrans_LedgerName(String value) {
        setAttributeInternal(TRANS_LEDGERNAME, value);
    }

    /**
     * Gets the attribute value for WELL_BLOCK_CODE using the alias name WellBlockCode.
     * @return the WELL_BLOCK_CODE
     */
    public String getWellBlockCode() {
        return (String) getAttributeInternal(WELLBLOCKCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for WELL_BLOCK_CODE using the alias name WellBlockCode.
     * @param value value to set the WELL_BLOCK_CODE
     */
    public void setWellBlockCode(String value) {
        setAttributeInternal(WELLBLOCKCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_WellBlockName.
     * @return the Trans_WellBlockName
     */
    public String getTrans_WellBlockName() {
        String wellBlockCode = null;
        String wellBlockName = null;
        if (getWellBlockCode() != null) {
            wellBlockCode = getWellBlockCode();
            Row[] orgRows;
            orgRows = getLookup_View_ROVO().getFilteredRows("LookupValueCode", wellBlockCode);
            if (orgRows.length > 0) {                
                wellBlockName = orgRows[0].getAttribute("LookupValueNameDisp").toString();                
            }
            return wellBlockName;
        } else {
            return (String) getAttributeInternal(TRANS_WELLBLOCKNAME);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_WellBlockName.
     * @param value value to set the  Trans_WellBlockName
     */
    public void setTrans_WellBlockName(String value) {
        setAttributeInternal(TRANS_WELLBLOCKNAME, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link WellDtlsVO.
     */
    public RowIterator getWellDtlsVO() {
        return (RowIterator) getAttributeInternal(WELLDTLSVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link WellChild_VO.
     */
    public RowIterator getWellChild_VO() {
        return (RowIterator) getAttributeInternal(WELLCHILD_VO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Xxhr_BusinessUnit_view_ROVO.
     */
    public RowSet getXxhr_BusinessUnit_view_ROVO() {
        return (RowSet) getAttributeInternal(XXHR_BUSINESSUNIT_VIEW_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Xxgl_Ledgers.
     */
    public RowSet getXxgl_Ledgers() {
        return (RowSet) getAttributeInternal(XXGL_LEDGERS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Xxhr_BusinessUnit_view_Ref.
     */
    public RowSet getXxhr_BusinessUnit_view_Ref() {
        return (RowSet) getAttributeInternal(XXHR_BUSINESSUNIT_VIEW_REF);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Code_Combination_ROVO.
     */
    public RowSet getCode_Combination_ROVO() {
        return (RowSet) getAttributeInternal(CODE_COMBINATION_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Code_Combination_Ref.
     */
    public RowSet getCode_Combination_Ref() {
        return (RowSet) getAttributeInternal(CODE_COMBINATION_REF);
    }

    /**
     * Gets the view accessor <code>RowSet</code> EntityProfiles_ROVO.
     */
    public RowSet getEntityProfiles_ROVO() {
        return (RowSet) getAttributeInternal(ENTITYPROFILES_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> EntityProfiles_Ref.
     */
    public RowSet getEntityProfiles_Ref() {
        return (RowSet) getAttributeInternal(ENTITYPROFILES_REF);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Well_ROVO.
     */
    public RowSet getWell_ROVO() {
        return (RowSet) getAttributeInternal(WELL_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Company_ROVO.
     */
    public RowSet getCompany_ROVO() {
        return (RowSet) getAttributeInternal(COMPANY_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Company_AssetBook_ROVO.
     */
    public RowSet getCompany_AssetBook_ROVO() {
        return (RowSet) getAttributeInternal(COMPANY_ASSETBOOK_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LegalEntity_ROVO.
     */
    public RowSet getLegalEntity_ROVO() {
        return (RowSet) getAttributeInternal(LEGALENTITY_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup_View_ROVO.
     */
    public RowSet getLookup_View_ROVO() {
        return (RowSet) getAttributeInternal(LOOKUP_VIEW_ROVO);
    }
}

