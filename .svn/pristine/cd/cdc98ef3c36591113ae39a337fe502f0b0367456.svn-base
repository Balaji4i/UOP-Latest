package model.vo;

import java.math.BigDecimal;
import java.math.RoundingMode;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 27 11:50:24 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UopLines_VORowImpl extends ViewRowImpl {


    public static final int ENTITY_UOPLINES_EO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        CcAccuCstOpening,
        CcAccuDeprOpening,
        CcCip,
        CcNbv,
        CcOpeningNbv,
        CcPeriodAdditions,
        CcPeriodDepr,
        CcTotAccuAssetCst,
        CcTotAccuDepr,
        CcTotalAddition,
        CreatedBy,
        CreationDate,
        ErrorMessage,
        FdcAccuCstOpening,
        FdcAccuDeprOpening,
        FdcAdditionCip,
        FdcCip,
        FdcNbv,
        FdcOpeningNbv,
        FdcPeriodAdditions,
        FdcPeriodDepr,
        FdcTotAccuAssetCst,
        FdcTotAccuDepr,
        GlHeaderId,
        GlLineId,
        LastUpdateDate,
        LastUpdateLogin,
        LastUpdatedBy,
        ProcessFlag,
        UopDeprHdrId,
        UopDeprLineId,
        AssetCategoryId,
        CipCaptizationCost,
        CipClsoingBalance,
        CipCost,
        CcProdUnitsEquity,
        CcUnitsNetReserve,
        Trans_category,
        Trans_Bookcode,
        Trans_CatFilter,
        WellMasterVO,
        WellMasterVO_Ref,
        UopMaster_VO_Ref,
        Category_ROVO;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CCACCUCSTOPENING = AttributesEnum.CcAccuCstOpening.index();
    public static final int CCACCUDEPROPENING = AttributesEnum.CcAccuDeprOpening.index();
    public static final int CCCIP = AttributesEnum.CcCip.index();
    public static final int CCNBV = AttributesEnum.CcNbv.index();
    public static final int CCOPENINGNBV = AttributesEnum.CcOpeningNbv.index();
    public static final int CCPERIODADDITIONS = AttributesEnum.CcPeriodAdditions.index();
    public static final int CCPERIODDEPR = AttributesEnum.CcPeriodDepr.index();
    public static final int CCTOTACCUASSETCST = AttributesEnum.CcTotAccuAssetCst.index();
    public static final int CCTOTACCUDEPR = AttributesEnum.CcTotAccuDepr.index();
    public static final int CCTOTALADDITION = AttributesEnum.CcTotalAddition.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int ERRORMESSAGE = AttributesEnum.ErrorMessage.index();
    public static final int FDCACCUCSTOPENING = AttributesEnum.FdcAccuCstOpening.index();
    public static final int FDCACCUDEPROPENING = AttributesEnum.FdcAccuDeprOpening.index();
    public static final int FDCADDITIONCIP = AttributesEnum.FdcAdditionCip.index();
    public static final int FDCCIP = AttributesEnum.FdcCip.index();
    public static final int FDCNBV = AttributesEnum.FdcNbv.index();
    public static final int FDCOPENINGNBV = AttributesEnum.FdcOpeningNbv.index();
    public static final int FDCPERIODADDITIONS = AttributesEnum.FdcPeriodAdditions.index();
    public static final int FDCPERIODDEPR = AttributesEnum.FdcPeriodDepr.index();
    public static final int FDCTOTACCUASSETCST = AttributesEnum.FdcTotAccuAssetCst.index();
    public static final int FDCTOTACCUDEPR = AttributesEnum.FdcTotAccuDepr.index();
    public static final int GLHEADERID = AttributesEnum.GlHeaderId.index();
    public static final int GLLINEID = AttributesEnum.GlLineId.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int PROCESSFLAG = AttributesEnum.ProcessFlag.index();
    public static final int UOPDEPRHDRID = AttributesEnum.UopDeprHdrId.index();
    public static final int UOPDEPRLINEID = AttributesEnum.UopDeprLineId.index();
    public static final int ASSETCATEGORYID = AttributesEnum.AssetCategoryId.index();
    public static final int CIPCAPTIZATIONCOST = AttributesEnum.CipCaptizationCost.index();
    public static final int CIPCLSOINGBALANCE = AttributesEnum.CipClsoingBalance.index();
    public static final int CIPCOST = AttributesEnum.CipCost.index();
    public static final int CCPRODUNITSEQUITY = AttributesEnum.CcProdUnitsEquity.index();
    public static final int CCUNITSNETRESERVE = AttributesEnum.CcUnitsNetReserve.index();
    public static final int TRANS_CATEGORY = AttributesEnum.Trans_category.index();
    public static final int TRANS_BOOKCODE = AttributesEnum.Trans_Bookcode.index();
    public static final int TRANS_CATFILTER = AttributesEnum.Trans_CatFilter.index();
    public static final int WELLMASTERVO = AttributesEnum.WellMasterVO.index();
    public static final int WELLMASTERVO_REF = AttributesEnum.WellMasterVO_Ref.index();
    public static final int UOPMASTER_VO_REF = AttributesEnum.UopMaster_VO_Ref.index();
    public static final int CATEGORY_ROVO = AttributesEnum.Category_ROVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UopLines_VORowImpl() {
    }

    /**
     * Gets UopLines_EO entity object.
     * @return the UopLines_EO
     */
    public EntityImpl getUopLines_EO() {
        return (EntityImpl) getEntity(ENTITY_UOPLINES_EO);
    }

    /**
     * Gets the attribute value for CC_ACCU_CST_OPENING using the alias name CcAccuCstOpening.
     * @return the CC_ACCU_CST_OPENING
     */
    public BigDecimal getCcAccuCstOpening() {
        return (BigDecimal) getAttributeInternal(CCACCUCSTOPENING);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_ACCU_CST_OPENING using the alias name CcAccuCstOpening.
     * @param value value to set the CC_ACCU_CST_OPENING
     */
    public void setCcAccuCstOpening(BigDecimal value) {
        setAttributeInternal(CCACCUCSTOPENING, value);
    }

    /**
     * Gets the attribute value for CC_ACCU_DEPR_OPENING using the alias name CcAccuDeprOpening.
     * @return the CC_ACCU_DEPR_OPENING
     */
    public BigDecimal getCcAccuDeprOpening() {
        return (BigDecimal) getAttributeInternal(CCACCUDEPROPENING);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_ACCU_DEPR_OPENING using the alias name CcAccuDeprOpening.
     * @param value value to set the CC_ACCU_DEPR_OPENING
     */
    public void setCcAccuDeprOpening(BigDecimal value) {
        setAttributeInternal(CCACCUDEPROPENING, value);
    }

    /**
     * Gets the attribute value for CC_CIP using the alias name CcCip.
     * @return the CC_CIP
     */
    public BigDecimal getCcCip() {
        return (BigDecimal) getAttributeInternal(CCCIP);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_CIP using the alias name CcCip.
     * @param value value to set the CC_CIP
     */
    public void setCcCip(BigDecimal value) {
        setAttributeInternal(CCCIP, value);
    }

    /**
     * Gets the attribute value for CC_NBV using the alias name CcNbv.
     * @return the CC_NBV
     */
    public BigDecimal getCcNbv() {        
        BigDecimal ccTotAccuAssetCst =
            (BigDecimal) (this.getCcTotAccuAssetCst() == null ? new BigDecimal(0) : (BigDecimal) this.getCcTotAccuAssetCst());
        BigDecimal ccTotAccuDepr =
            (BigDecimal) (this.getCcTotAccuDepr() == null ? new BigDecimal(0) : (BigDecimal) this.getCcTotAccuDepr());
        return (BigDecimal) (ccTotAccuAssetCst.subtract(ccTotAccuDepr));
    }

    /**
     * Sets <code>value</code> as attribute value for CC_NBV using the alias name CcNbv.
     * @param value value to set the CC_NBV
     */
    public void setCcNbv(BigDecimal value) {        
        setAttributeInternal(CCNBV, value);
    }

    /**
     * Gets the attribute value for CC_OPENING_NBV using the alias name CcOpeningNbv.
     * @return the CC_OPENING_NBV
     */
    public BigDecimal getCcOpeningNbv() {
        return (BigDecimal) getAttributeInternal(CCOPENINGNBV);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_OPENING_NBV using the alias name CcOpeningNbv.
     * @param value value to set the CC_OPENING_NBV
     */
    public void setCcOpeningNbv(BigDecimal value) {
        setAttributeInternal(CCOPENINGNBV, value);
    }

    /**
     * Gets the attribute value for CC_PERIOD_ADDITIONS using the alias name CcPeriodAdditions.
     * @return the CC_PERIOD_ADDITIONS
     */
    public BigDecimal getCcPeriodAdditions() {
        return (BigDecimal) getAttributeInternal(CCPERIODADDITIONS);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_PERIOD_ADDITIONS using the alias name CcPeriodAdditions.
     * @param value value to set the CC_PERIOD_ADDITIONS
     */
    public void setCcPeriodAdditions(BigDecimal value) {
        setAttributeInternal(CCPERIODADDITIONS, value);
    }

    /**
     * Gets the attribute value for CC_PERIOD_DEPR using the alias name CcPeriodDepr.
     * @return the CC_PERIOD_DEPR
     */
    public BigDecimal getCcPeriodDepr() {
        BigDecimal ccProdUnitsEquity =
            (BigDecimal) (this.getCcProdUnitsEquity() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getCcProdUnitsEquity());
        BigDecimal ccUnitsNetReserve =
            (BigDecimal) (this.getCcUnitsNetReserve() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getCcUnitsNetReserve());
        BigDecimal ccOpeningNbv =
            (BigDecimal) (this.getCcOpeningNbv() == null ? new BigDecimal(0) : (BigDecimal) this.getCcOpeningNbv());
        BigDecimal ccTotalAddition =
            (BigDecimal) (this.getCcTotalAddition() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getCcTotalAddition());        
        try {
            return (BigDecimal) ((ccProdUnitsEquity.divide(ccUnitsNetReserve, 16, RoundingMode.HALF_UP))
                                 .multiply(ccOpeningNbv.add(ccTotalAddition)));
        } catch (ArithmeticException ex) {
            return new BigDecimal(0);
        }
    }

    /**
     * Sets <code>value</code> as attribute value for CC_PERIOD_DEPR using the alias name CcPeriodDepr.
     * @param value value to set the CC_PERIOD_DEPR
     */
    public void setCcPeriodDepr(BigDecimal value) {
        setAttributeInternal(CCPERIODDEPR, value);
    }


    /**
     * Gets the attribute value for CC_TOT_ACCU_ASSET_CST using the alias name CcTotAccuAssetCst.
     * @return the CC_TOT_ACCU_ASSET_CST
     */
    public BigDecimal getCcTotAccuAssetCst() {
        BigDecimal ccAccuCstOpening =
            (BigDecimal) (this.getCcAccuCstOpening() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getCcAccuCstOpening());
        BigDecimal ccTotalAddition =
            (BigDecimal) (this.getCcTotalAddition() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getCcTotalAddition());
        return (BigDecimal) (ccAccuCstOpening.add(ccTotalAddition));
        //return (BigDecimal) getAttributeInternal(CCTOTACCUASSETCST);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_TOT_ACCU_ASSET_CST using the alias name CcTotAccuAssetCst.
     * @param value value to set the CC_TOT_ACCU_ASSET_CST
     */
    public void setCcTotAccuAssetCst(BigDecimal value) {
        setAttributeInternal(CCTOTACCUASSETCST, value);
    }

    /**
     * Gets the attribute value for CC_TOT_ACCU_DEPR using the alias name CcTotAccuDepr.
     * @return the CC_TOT_ACCU_DEPR
     */
    public BigDecimal getCcTotAccuDepr() {
//        BigDecimal ccAccuDeprOpening =
//            (BigDecimal) (this.getCcAccuDeprOpening() == null ? new BigDecimal(0) :
//                          (BigDecimal) this.getCcAccuDeprOpening());
//        BigDecimal ccPeriodDepr =
//            (BigDecimal) (this.getCcPeriodDepr() == null ? new BigDecimal(0) : (BigDecimal) this.getCcPeriodDepr());
//        return (BigDecimal) (ccAccuDeprOpening.add(ccPeriodDepr));
        return (BigDecimal) getAttributeInternal(CCTOTACCUDEPR);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_TOT_ACCU_DEPR using the alias name CcTotAccuDepr.
     * @param value value to set the CC_TOT_ACCU_DEPR
     */
    public void setCcTotAccuDepr(BigDecimal value) {
        setAttributeInternal(CCTOTACCUDEPR, value);
    }

    /**
     * Gets the attribute value for CC_TOTAL_ADDITION using the alias name CcTotalAddition.
     * @return the CC_TOTAL_ADDITION
     */
    public BigDecimal getCcTotalAddition() {
        BigDecimal ccPeriodAdditions =
            (BigDecimal) (this.getCcPeriodAdditions() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getCcPeriodAdditions());
        BigDecimal ccCip = (BigDecimal) (this.getCcCip() == null ? new BigDecimal(0) : (BigDecimal) this.getCcCip());
        //BigDecimal setCcTotalAddition =
        return (BigDecimal) (ccPeriodAdditions.add(ccCip));

    }

    /**
     * Sets <code>value</code> as attribute value for CC_TOTAL_ADDITION using the alias name CcTotalAddition.
     * @param value value to set the CC_TOTAL_ADDITION
     */
    public void setCcTotalAddition(BigDecimal value) {
        setAttributeInternal(CCTOTALADDITION, value);
    }


    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for ERROR_MESSAGE using the alias name ErrorMessage.
     * @return the ERROR_MESSAGE
     */
    public String getErrorMessage() {
        return (String) getAttributeInternal(ERRORMESSAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for ERROR_MESSAGE using the alias name ErrorMessage.
     * @param value value to set the ERROR_MESSAGE
     */
    public void setErrorMessage(String value) {
        setAttributeInternal(ERRORMESSAGE, value);
    }

    /**
     * Gets the attribute value for FDC_ACCU_CST_OPENING using the alias name FdcAccuCstOpening.
     * @return the FDC_ACCU_CST_OPENING
     */
    public BigDecimal getFdcAccuCstOpening() {
        return (BigDecimal) getAttributeInternal(FDCACCUCSTOPENING);
    }

    /**
     * Sets <code>value</code> as attribute value for FDC_ACCU_CST_OPENING using the alias name FdcAccuCstOpening.
     * @param value value to set the FDC_ACCU_CST_OPENING
     */
    public void setFdcAccuCstOpening(BigDecimal value) {
        setAttributeInternal(FDCACCUCSTOPENING, value);
    }

    /**
     * Gets the attribute value for FDC_ACCU_DEPR_OPENING using the alias name FdcAccuDeprOpening.
     * @return the FDC_ACCU_DEPR_OPENING
     */
    public BigDecimal getFdcAccuDeprOpening() {
        return (BigDecimal) getAttributeInternal(FDCACCUDEPROPENING);
    }

    /**
     * Sets <code>value</code> as attribute value for FDC_ACCU_DEPR_OPENING using the alias name FdcAccuDeprOpening.
     * @param value value to set the FDC_ACCU_DEPR_OPENING
     */
    public void setFdcAccuDeprOpening(BigDecimal value) {
        setAttributeInternal(FDCACCUDEPROPENING, value);
    }

    /**
     * Gets the attribute value for FDC_ADDITION_CIP using the alias name FdcAdditionCip.
     * @return the FDC_ADDITION_CIP
     */
    public BigDecimal getFdcAdditionCip() {

        BigDecimal fdcPeriodAdditions =
            (BigDecimal) (this.getFdcPeriodAdditions() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getFdcPeriodAdditions());
        BigDecimal fdcCip = (BigDecimal) (this.getFdcCip() == null ? new BigDecimal(0) : (BigDecimal) this.getFdcCip());
        return (BigDecimal) (fdcPeriodAdditions.add(fdcCip));
    }

    /**
     * Sets <code>value</code> as attribute value for FDC_ADDITION_CIP using the alias name FdcAdditionCip.
     * @param value value to set the FDC_ADDITION_CIP
     */
    public void setFdcAdditionCip(BigDecimal value) {
        setAttributeInternal(FDCADDITIONCIP, value);
    }

    /**
     * Gets the attribute value for FDC_CIP using the alias name FdcCip.
     * @return the FDC_CIP
     */
    public BigDecimal getFdcCip() {
        return (BigDecimal) getAttributeInternal(FDCCIP);
    }

    /**
     * Sets <code>value</code> as attribute value for FDC_CIP using the alias name FdcCip.
     * @param value value to set the FDC_CIP
     */
    public void setFdcCip(BigDecimal value) {
        setAttributeInternal(FDCCIP, value);
    }

    /**
     * Gets the attribute value for FDC_NBV using the alias name FdcNbv.
     * @return the FDC_NBV
     */
    public BigDecimal getFdcNbv() {
        BigDecimal fdcTotAccuAssetCst =
            (BigDecimal) (this.getFdcTotAccuAssetCst() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getFdcTotAccuAssetCst());
        BigDecimal fdcTotAccuDepr =
            (BigDecimal) (this.getFdcTotAccuDepr() == null ? new BigDecimal(0) : (BigDecimal) this.getFdcTotAccuDepr());
        return (BigDecimal) (fdcTotAccuAssetCst.subtract(fdcTotAccuDepr));
    }

    /**
     * Sets <code>value</code> as attribute value for FDC_NBV using the alias name FdcNbv.
     * @param value value to set the FDC_NBV
     */
    public void setFdcNbv(BigDecimal value) {
        setAttributeInternal(FDCNBV, value);
    }

    /**
     * Gets the attribute value for FDC_OPENING_NBV using the alias name FdcOpeningNbv.
     * @return the FDC_OPENING_NBV
     */
    public BigDecimal getFdcOpeningNbv() {
        return (BigDecimal) getAttributeInternal(FDCOPENINGNBV);
    }

    /**
     * Sets <code>value</code> as attribute value for FDC_OPENING_NBV using the alias name FdcOpeningNbv.
     * @param value value to set the FDC_OPENING_NBV
     */
    public void setFdcOpeningNbv(BigDecimal value) {
        setAttributeInternal(FDCOPENINGNBV, value);
    }

    /**
     * Gets the attribute value for FDC_PERIOD_ADDITIONS using the alias name FdcPeriodAdditions.
     * @return the FDC_PERIOD_ADDITIONS
     */
    public BigDecimal getFdcPeriodAdditions() {
        return (BigDecimal) getAttributeInternal(FDCPERIODADDITIONS);
    }

    /**
     * Sets <code>value</code> as attribute value for FDC_PERIOD_ADDITIONS using the alias name FdcPeriodAdditions.
     * @param value value to set the FDC_PERIOD_ADDITIONS
     */
    public void setFdcPeriodAdditions(BigDecimal value) {
        setAttributeInternal(FDCPERIODADDITIONS, value);
    }

    /**
     * Gets the attribute value for FDC_PERIOD_DEPR using the alias name FdcPeriodDepr.
     * @return the FDC_PERIOD_DEPR
     */
    public BigDecimal getFdcPeriodDepr() {
        BigDecimal ccProdUnitsEquity =
            (BigDecimal) (this.getCcProdUnitsEquity() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getCcProdUnitsEquity());
        BigDecimal ccUnitsNetReserve =
            (BigDecimal) (this.getCcUnitsNetReserve() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getCcUnitsNetReserve());
        BigDecimal fdcOpeningNbv =
            (BigDecimal) (this.getFdcOpeningNbv() == null ? new BigDecimal(0) : (BigDecimal) this.getFdcOpeningNbv());
        BigDecimal fdcAdditionCip =
            (BigDecimal) (this.getFdcAdditionCip() == null ? new BigDecimal(0) : (BigDecimal) this.getFdcAdditionCip());        
        try {            
            return (BigDecimal) (ccProdUnitsEquity.divide(ccUnitsNetReserve, 16, RoundingMode.HALF_UP)
                                 .multiply(fdcAdditionCip.add(fdcOpeningNbv)));
        } catch (ArithmeticException ex) {            
            return new BigDecimal(0);
        }
    }

    /**
     * Sets <code>value</code> as attribute value for FDC_PERIOD_DEPR using the alias name FdcPeriodDepr.
     * @param value value to set the FDC_PERIOD_DEPR
     */
    public void setFdcPeriodDepr(BigDecimal value) {
        setAttributeInternal(FDCPERIODDEPR, value);
    }

    /**
     * Gets the attribute value for FDC_TOT_ACCU_ASSET_CST using the alias name FdcTotAccuAssetCst.
     * @return the FDC_TOT_ACCU_ASSET_CST
     */
    public BigDecimal getFdcTotAccuAssetCst() {
        BigDecimal fdcAccuCstOpening =
            (BigDecimal) (this.getFdcAccuCstOpening() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getFdcAccuCstOpening());
        BigDecimal fdcAdditionCip =
            (BigDecimal) (this.getFdcAdditionCip() == null ? new BigDecimal(0) : (BigDecimal) this.getFdcAdditionCip());
        return (BigDecimal) (fdcAccuCstOpening.add(fdcAdditionCip));
    }

    /**
     * Sets <code>value</code> as attribute value for FDC_TOT_ACCU_ASSET_CST using the alias name FdcTotAccuAssetCst.
     * @param value value to set the FDC_TOT_ACCU_ASSET_CST
     */
    public void setFdcTotAccuAssetCst(BigDecimal value) {
        setAttributeInternal(FDCTOTACCUASSETCST, value);
    }

    /**
     * Gets the attribute value for FDC_TOT_ACCU_DEPR using the alias name FdcTotAccuDepr.
     * @return the FDC_TOT_ACCU_DEPR
     */
    public BigDecimal getFdcTotAccuDepr() {
        BigDecimal fdcAccuDeprOpening =
            (BigDecimal) (this.getFdcAccuDeprOpening() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getFdcAccuDeprOpening());
        BigDecimal fdcPeriodDepr =
            (BigDecimal) (this.getFdcPeriodDepr() == null ? new BigDecimal(0) : (BigDecimal) this.getFdcPeriodDepr());
        return (BigDecimal) (fdcAccuDeprOpening.add(fdcPeriodDepr));
    }

    /**
     * Sets <code>value</code> as attribute value for FDC_TOT_ACCU_DEPR using the alias name FdcTotAccuDepr.
     * @param value value to set the FDC_TOT_ACCU_DEPR
     */
    public void setFdcTotAccuDepr(BigDecimal value) {
        setAttributeInternal(FDCTOTACCUDEPR, value);
    }

    /**
     * Gets the attribute value for GL_HEADER_ID using the alias name GlHeaderId.
     * @return the GL_HEADER_ID
     */
    public BigDecimal getGlHeaderId() {
        return (BigDecimal) getAttributeInternal(GLHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for GL_HEADER_ID using the alias name GlHeaderId.
     * @param value value to set the GL_HEADER_ID
     */
    public void setGlHeaderId(BigDecimal value) {
        setAttributeInternal(GLHEADERID, value);
    }

    /**
     * Gets the attribute value for GL_LINE_ID using the alias name GlLineId.
     * @return the GL_LINE_ID
     */
    public BigDecimal getGlLineId() {
        return (BigDecimal) getAttributeInternal(GLLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for GL_LINE_ID using the alias name GlLineId.
     * @param value value to set the GL_LINE_ID
     */
    public void setGlLineId(BigDecimal value) {
        setAttributeInternal(GLLINEID, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for PROCESS_FLAG using the alias name ProcessFlag.
     * @return the PROCESS_FLAG
     */
    public String getProcessFlag() {
        return (String) getAttributeInternal(PROCESSFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for PROCESS_FLAG using the alias name ProcessFlag.
     * @param value value to set the PROCESS_FLAG
     */
    public void setProcessFlag(String value) {
        setAttributeInternal(PROCESSFLAG, value);
    }

    /**
     * Gets the attribute value for UOP_DEPR_HDR_ID using the alias name UopDeprHdrId.
     * @return the UOP_DEPR_HDR_ID
     */
    public BigDecimal getUopDeprHdrId() {
        return (BigDecimal) getAttributeInternal(UOPDEPRHDRID);
    }

    /**
     * Sets <code>value</code> as attribute value for UOP_DEPR_HDR_ID using the alias name UopDeprHdrId.
     * @param value value to set the UOP_DEPR_HDR_ID
     */
    public void setUopDeprHdrId(BigDecimal value) {
        setAttributeInternal(UOPDEPRHDRID, value);
    }

    /**
     * Gets the attribute value for UOP_DEPR_LINE_ID using the alias name UopDeprLineId.
     * @return the UOP_DEPR_LINE_ID
     */
    public BigDecimal getUopDeprLineId() {
        return (BigDecimal) getAttributeInternal(UOPDEPRLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for UOP_DEPR_LINE_ID using the alias name UopDeprLineId.
     * @param value value to set the UOP_DEPR_LINE_ID
     */
    public void setUopDeprLineId(BigDecimal value) {
        setAttributeInternal(UOPDEPRLINEID, value);
    }


    /**
     * Gets the attribute value for ASSET_CATEGORY_ID using the alias name AssetCategoryId.
     * @return the ASSET_CATEGORY_ID
     */
    public BigDecimal getAssetCategoryId() {
        return (BigDecimal) getAttributeInternal(ASSETCATEGORYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSET_CATEGORY_ID using the alias name AssetCategoryId.
     * @param value value to set the ASSET_CATEGORY_ID
     */
    public void setAssetCategoryId(BigDecimal value) {
        setAttributeInternal(ASSETCATEGORYID, value);
    }

    /**
     * Gets the attribute value for CIP_CAPTIZATION_COST using the alias name CipCaptizationCost.
     * @return the CIP_CAPTIZATION_COST
     */
    public BigDecimal getCipCaptizationCost() {
        return (BigDecimal) getAttributeInternal(CIPCAPTIZATIONCOST);
    }

    /**
     * Sets <code>value</code> as attribute value for CIP_CAPTIZATION_COST using the alias name CipCaptizationCost.
     * @param value value to set the CIP_CAPTIZATION_COST
     */
    public void setCipCaptizationCost(BigDecimal value) {
        setAttributeInternal(CIPCAPTIZATIONCOST, value);
    }

    /**
     * Gets the attribute value for CIP_CLSOING_BALANCE using the alias name CipClsoingBalance.
     * @return the CIP_CLSOING_BALANCE
     */
    public BigDecimal getCipClsoingBalance() {
//        BigDecimal cipCost =
//            (BigDecimal) (this.getCipCost() == null ? new BigDecimal(0) : (BigDecimal) this.getCipCost());
//        BigDecimal cipCaptizationCost =
//            (BigDecimal) (this.getCipCaptizationCost() == null ? new BigDecimal(0) :
//                          (BigDecimal) this.getCipCaptizationCost());
//   
//        return (cipCost.add(cipCaptizationCost));
        return (BigDecimal) getAttributeInternal(CIPCLSOINGBALANCE);
    }

    /**
     * Sets <code>value</code> as attribute value for CIP_CLSOING_BALANCE using the alias name CipClsoingBalance.
     * @param value value to set the CIP_CLSOING_BALANCE
     */
    public void setCipClsoingBalance(BigDecimal value) {

        setAttributeInternal(CIPCLSOINGBALANCE, value);
    }

    /**
     * Gets the attribute value for CIP_COST using the alias name CipCost.
     * @return the CIP_COST
     */
    public BigDecimal getCipCost() {
        BigDecimal fdcCip = (BigDecimal) (this.getFdcCip() == null ? new BigDecimal(0) : (BigDecimal) this.getFdcCip());
        return (fdcCip.multiply(new BigDecimal(-1)));

    }

    /**
     * Sets <code>value</code> as attribute value for CIP_COST using the alias name CipCost.
     * @param value value to set the CIP_COST
     */
    public void setCipCost(BigDecimal value) {
        setAttributeInternal(CIPCOST, value);
    }


    /**
     * Gets the attribute value for the calculated attribute CcProdUnitsEquity.
     * @return the CcProdUnitsEquity
     */
    public BigDecimal getCcProdUnitsEquity() {
        BigDecimal id = new BigDecimal(0);
        BigDecimal value = new BigDecimal(0);
        if (getUopDeprHdrId() != null) {
            id = getUopDeprHdrId();
            Row[] orgRows;
            orgRows = getUopMaster_VO_Ref().getFilteredRows("UopDeprHdrId", id);
            if (orgRows.length > 0) {
                value = (BigDecimal) orgRows[0].getAttribute("ProdUnitsEquity");
            }
            return value;

        } else {
            return (BigDecimal) getAttributeInternal(CCPRODUNITSEQUITY);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute CcUnitsNetReserve.
     * @return the CcUnitsNetReserve
     */
    public BigDecimal getCcUnitsNetReserve() {
        BigDecimal id = new BigDecimal(0);
        BigDecimal value = new BigDecimal(0);
        if (getUopDeprHdrId() != null) {
            id = getUopDeprHdrId();
            Row[] orgRows;
            orgRows = getUopMaster_VO_Ref().getFilteredRows("UopDeprHdrId", id);
            if (orgRows.length > 0) {
                value = (BigDecimal) orgRows[0].getAttribute("UnitsNetReserve");
            }
            return value;
        } else {
            return (BigDecimal) getAttributeInternal(CCUNITSNETRESERVE);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_category.
     * @return the Trans_category
     */
    public String getTrans_category() {
        BigDecimal id = null;
        String value = null;
        if (getAssetCategoryId() != null) {
            id = getAssetCategoryId();
            Row[] orgRows;
            orgRows = getCategory_ROVO().getFilteredRows("CategoryId", id);
           // System.err.println("orgRows.length"+orgRows.length);
            if (orgRows.length > 0) {
                
                    value =  orgRows[0].getAttribute("Description").toString();
                

            }

            System.err.println("value"+value);
            return value;

        } else {
        return (String) getAttributeInternal(TRANS_CATEGORY);}
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_category.
     * @param value value to set the  Trans_category
     */
    public void setTrans_category(String value) {
        setAttributeInternal(TRANS_CATEGORY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_Bookcode.
     * @return the Trans_Bookcode
     */
    public String getTrans_Bookcode() {
        BigDecimal id = null;
        String value = "0";
        if (getUopDeprHdrId() != null) {
            id = getUopDeprHdrId();
            Row[] orgRows;
            orgRows = getUopMaster_VO_Ref().getFilteredRows("UopDeprHdrId", id);
           // System.err.println("orgRows.length"+orgRows.length);
            if (orgRows.length > 0) {
                
                    value =  orgRows[0].getAttribute("AssetBookCode").toString();
                

            }

            System.err.println("value"+value);
            return value;

        } else {
        return (String) getAttributeInternal(TRANS_BOOKCODE);}
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_Bookcode.
     * @param value value to set the  Trans_Bookcode
     */
    public void setTrans_Bookcode(String value) {
        setAttributeInternal(TRANS_BOOKCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_CatFilter.
     * @return the Trans_CatFilter
     */
    public String getTrans_CatFilter() {
        BigDecimal id = null;
        String value = null;
        if (getAssetCategoryId() != null) {
            id = getAssetCategoryId();
            Row[] orgRows;
            orgRows = getCategory_ROVO().getFilteredRows("CategoryId", id);
           // System.err.println("orgRows.length"+orgRows.length);
            if (orgRows.length > 0) {
                
                    value =  orgRows[0].getAttribute("Description").toString();
                

            }

            System.err.println("value"+value);
            return value;

        } else {
        return (String) getAttributeInternal(TRANS_CATFILTER);}
    }

    /**
     * Gets the view accessor <code>RowSet</code> WellMasterVO.
     */
    public RowSet getWellMasterVO() {
        return (RowSet) getAttributeInternal(WELLMASTERVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WellMasterVO_Ref.
     */
    public RowSet getWellMasterVO_Ref() {
        return (RowSet) getAttributeInternal(WELLMASTERVO_REF);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UopMaster_VO_Ref.
     */
    public RowSet getUopMaster_VO_Ref() {
        return (RowSet) getAttributeInternal(UOPMASTER_VO_REF);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Category_ROVO.
     */
    public RowSet getCategory_ROVO() {
        return (RowSet) getAttributeInternal(CATEGORY_ROVO);
    }
}

